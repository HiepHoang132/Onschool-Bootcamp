{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://task-fa11.20/./src/index.ts"],"sourcesContent":["interface Student {\n  id: number;\n  name: string;\n  age: number;\n}\n\ninterface Course {\n  id: number;\n  title: string;\n  credits: number;\n}\n\ninterface Enrollment {\n  studentId: number;\n  courseId: number;\n}\n\nclass DataManager<T> {\n  private items: T[] = [];\n\n  add(item: T): void {\n    this.items.push(item);\n  }\n\n  getAll(): T[] {\n    return this.items;\n  }\n}\n\nconst studentManager = new DataManager<Student>();\nconst courseManager = new DataManager<Course>();\nconst enrollmentManager = new DataManager<Enrollment>();\n\nstudentManager.add({ id: 1, name: \"John\", age: 16 });\nstudentManager.add({ id: 2, name: \"Jane\", age: 17 });\n\ncourseManager.add({ id: 1, title: \"Mathematics\", credits: 3 });\ncourseManager.add({ id: 2, title: \"English\", credits: 2 });\n\nenrollmentManager.add({ studentId: 1, courseId: 1 });\nenrollmentManager.add({ studentId: 2, courseId: 2 });\n\nfunction displayStudents() {\n  const students = studentManager.getAll();\n  const courses = courseManager.getAll();\n  const enrollments = enrollmentManager.getAll();\n\n  const studentsDiv = document.getElementById(\"students\")!;\n  studentsDiv.innerHTML = \"\"; // Clear existing content\n\n  students.forEach((student) => {\n    const studentDiv = document.createElement(\"div\");\n    studentDiv.className = \"student\";\n    studentDiv.textContent = `Student: ${student.name}, Age: ${\n      student.age\n    }, Courses: ${getCourses(student.id, enrollments, courses).join(\", \")}`;\n    studentsDiv.appendChild(studentDiv);\n  });\n}\n\nfunction getCourses(\n  studentId: number,\n  enrollments: Enrollment[],\n  courses: Course[]\n): string[] {\n  return enrollments\n    .filter((enrollment) => enrollment.studentId === studentId)\n    .map((enrollment) => {\n      const course = courses.find(\n        (course) => course.id === enrollment.courseId\n      );\n      return course ? course.title : \"Unknown\";\n    });\n}\n\n// Initial display\ndisplayStudents();\n\ndocument.getElementById(\"add-student\")!.addEventListener(\"click\", () => {\n  const newStudent: Student = {\n    id: studentManager.getAll().length + 1,\n    name: \"Alice\",\n    age: 18,\n  };\n  studentManager.add(newStudent);\n  displayStudents();\n});\n"],"names":[],"sourceRoot":""}