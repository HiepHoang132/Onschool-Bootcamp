{"version":3,"file":"bundle.js","mappings":";;;;AAUA,SAAS,YAAY,CAAC,MAAc;IAClC,IAAM,UAAU,GAAG,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAE,CAAC;IACvD,IAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAChD,SAAS,CAAC,SAAS,GAAG,QAAQ,CAAC;IAE/B,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,EAAE,CAAC;QAChC,SAAS,CAAC,WAAW,GAAG,mBAAY,MAAM,CAAC,IAAI,CAAE,CAAC;QAClD,SAAS,CAAC,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC;IAClC,CAAC;SAAM,CAAC;QACN,SAAS,CAAC,WAAW,GAAG,iBAAU,MAAM,CAAC,OAAO,CAAE,CAAC;QACnD,SAAS,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;IAChC,CAAC;IAED,UAAU,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;AACpC,CAAC;AAED,IAAM,aAAa,GAAkB;IACnC,MAAM,EAAE,SAAS;IACjB,IAAI,EAAE,mCAAmC;CAC1C,CAAC;AACF,IAAM,WAAW,GAAgB;IAC/B,MAAM,EAAE,OAAO;IACf,OAAO,EAAE,6CAA6C;CACvD,CAAC;AAEF,4BAA4B;AAC5B,IAAM,YAAY,GAAiB;IACjC,IAAI,EAAE,MAAM;IACZ,GAAG,EAAE,EAAE;IACP,IAAI,EAAE,EAAE;IACR,OAAO,EAAE,EAAE;CACZ,CAAC;AAEF,SAAS,mBAAmB,CAAC,YAA0B;IACrD,IAAM,UAAU,GAAG,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAE,CAAC;IACvD,IAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC/C,QAAQ,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC9B,QAAQ,CAAC,WAAW,GAAG,mBAAY,YAAY,CAAC,IAAI,oBAAU,YAAY,CAAC,GAAG,qBAAW,YAAY,CAAC,IAAI,wBAAc,YAAY,CAAC,OAAO,CAAE,CAAC;IAC/I,QAAQ,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;IAC9B,UAAU,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;AACnC,CAAC;AAED,kBAAkB;AAClB,YAAY,CAAC,aAAa,CAAC,CAAC;AAC5B,YAAY,CAAC,WAAW,CAAC,CAAC;AAC1B,mBAAmB,CAAC,YAAY,CAAC,CAAC;AAElC,iCAAiC;AACjC,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAE,CAAC,gBAAgB,CAAC,OAAO,EAAE;IAChE,YAAY,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,2BAA2B,EAAE,CAAC,CAAC;AACzE,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAE,CAAC,gBAAgB,CAAC,OAAO,EAAE;IAC9D,YAAY,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,yBAAyB,EAAE,CAAC,CAAC;AACxE,CAAC,CAAC,CAAC","sources":["webpack://task-fa11.10/./src/app.ts"],"sourcesContent":["// Union Types\ntype SuccessResult = { status: \"success\"; data: string };\ntype ErrorResult = { status: \"error\"; message: string };\ntype Result = SuccessResult | ErrorResult;\n\n// Intersection Types\ntype Student = { name: string; age: number };\ntype Score = { math: number; english: number };\ntype StudentScore = Student & Score;\n\nfunction handleResult(result: Result) {\n  const resultsDiv = document.getElementById(\"results\")!;\n  const resultDiv = document.createElement(\"div\");\n  resultDiv.className = \"result\";\n\n  if (result.status === \"success\") {\n    resultDiv.textContent = `Success: ${result.data}`;\n    resultDiv.style.color = \"green\";\n  } else {\n    resultDiv.textContent = `Error: ${result.message}`;\n    resultDiv.style.color = \"red\";\n  }\n\n  resultsDiv.appendChild(resultDiv);\n}\n\nconst successResult: SuccessResult = {\n  status: \"success\",\n  data: \"Operation completed successfully.\",\n};\nconst errorResult: ErrorResult = {\n  status: \"error\",\n  message: \"There was an error processing your request.\",\n};\n\n// Intersection Type example\nconst studentScore: StudentScore = {\n  name: \"John\",\n  age: 16,\n  math: 90,\n  english: 85,\n};\n\nfunction displayStudentScore(studentScore: StudentScore) {\n  const resultsDiv = document.getElementById(\"results\")!;\n  const scoreDiv = document.createElement(\"div\");\n  scoreDiv.className = \"result\";\n  scoreDiv.textContent = `Student: ${studentScore.name}, Age: ${studentScore.age}, Math: ${studentScore.math}, English: ${studentScore.english}`;\n  scoreDiv.style.color = \"blue\";\n  resultsDiv.appendChild(scoreDiv);\n}\n\n// Initial display\nhandleResult(successResult);\nhandleResult(errorResult);\ndisplayStudentScore(studentScore);\n\n// Add event listeners to buttons\ndocument.getElementById(\"add-success\")!.addEventListener(\"click\", () => {\n  handleResult({ status: \"success\", data: \"New success result added!\" });\n});\n\ndocument.getElementById(\"add-error\")!.addEventListener(\"click\", () => {\n  handleResult({ status: \"error\", message: \"New error result added!\" });\n});\n"],"names":[],"sourceRoot":""}